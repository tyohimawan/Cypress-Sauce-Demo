{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-10T12:34:46.177Z",
    "end": "2025-07-10T12:35:00.304Z",
    "duration": 14127,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "18954ec3-f649-4776-baab-b5ee0fda1a64",
      "title": "",
      "fullFile": "cypress\\e2e\\login\\login.cy.js",
      "file": "cypress\\e2e\\login\\login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "22011db1-c248-4626-aa04-706fe7fd3458",
          "title": "SauceDemo Login - Data Driven",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login attempt for user: standard_user",
              "fullTitle": "SauceDemo Login - Data Driven Login attempt for user: standard_user",
              "timedOut": null,
              "duration": 2814,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.fillUsername(user.username);\nloginPage.fillPassword(user.password);\nloginPage.submit();\nif (user.expected === 'success') {\n  cy.url().should('include', '/inventory');\n  loginPage.getError().should('not.exist');\n} else if (user.expected === 'locked_out') {\n  loginPage.getError().should('contain', 'locked out');\n} else if (user.expected === 'invalid') {\n  loginPage.getError().should('be.visible');\n}",
              "err": {},
              "uuid": "ced23ec3-db90-4b21-a54e-370a8d79f9d9",
              "parentUUID": "22011db1-c248-4626-aa04-706fe7fd3458",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login attempt for user: locked_out_user",
              "fullTitle": "SauceDemo Login - Data Driven Login attempt for user: locked_out_user",
              "timedOut": null,
              "duration": 1512,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.fillUsername(user.username);\nloginPage.fillPassword(user.password);\nloginPage.submit();\nif (user.expected === 'success') {\n  cy.url().should('include', '/inventory');\n  loginPage.getError().should('not.exist');\n} else if (user.expected === 'locked_out') {\n  loginPage.getError().should('contain', 'locked out');\n} else if (user.expected === 'invalid') {\n  loginPage.getError().should('be.visible');\n}",
              "err": {},
              "uuid": "0b43da1b-fb5c-492d-b512-f780fecc5b20",
              "parentUUID": "22011db1-c248-4626-aa04-706fe7fd3458",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login attempt for user: problem_user",
              "fullTitle": "SauceDemo Login - Data Driven Login attempt for user: problem_user",
              "timedOut": null,
              "duration": 887,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.fillUsername(user.username);\nloginPage.fillPassword(user.password);\nloginPage.submit();\nif (user.expected === 'success') {\n  cy.url().should('include', '/inventory');\n  loginPage.getError().should('not.exist');\n} else if (user.expected === 'locked_out') {\n  loginPage.getError().should('contain', 'locked out');\n} else if (user.expected === 'invalid') {\n  loginPage.getError().should('be.visible');\n}",
              "err": {},
              "uuid": "03619127-459f-40ca-80f3-c425723a1d50",
              "parentUUID": "22011db1-c248-4626-aa04-706fe7fd3458",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login attempt for user: performance_glitch_user",
              "fullTitle": "SauceDemo Login - Data Driven Login attempt for user: performance_glitch_user",
              "timedOut": null,
              "duration": 6021,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.fillUsername(user.username);\nloginPage.fillPassword(user.password);\nloginPage.submit();\nif (user.expected === 'success') {\n  cy.url().should('include', '/inventory');\n  loginPage.getError().should('not.exist');\n} else if (user.expected === 'locked_out') {\n  loginPage.getError().should('contain', 'locked out');\n} else if (user.expected === 'invalid') {\n  loginPage.getError().should('be.visible');\n}",
              "err": {},
              "uuid": "bae5b408-eb14-45d5-badf-d10d2c5ef722",
              "parentUUID": "22011db1-c248-4626-aa04-706fe7fd3458",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login attempt for user: invalid_user",
              "fullTitle": "SauceDemo Login - Data Driven Login attempt for user: invalid_user",
              "timedOut": null,
              "duration": 929,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.fillUsername(user.username);\nloginPage.fillPassword(user.password);\nloginPage.submit();\nif (user.expected === 'success') {\n  cy.url().should('include', '/inventory');\n  loginPage.getError().should('not.exist');\n} else if (user.expected === 'locked_out') {\n  loginPage.getError().should('contain', 'locked out');\n} else if (user.expected === 'invalid') {\n  loginPage.getError().should('be.visible');\n}",
              "err": {},
              "uuid": "0c0a12f0-1ebb-4a49-beab-2117846ec52c",
              "parentUUID": "22011db1-c248-4626-aa04-706fe7fd3458",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ced23ec3-db90-4b21-a54e-370a8d79f9d9",
            "0b43da1b-fb5c-492d-b512-f780fecc5b20",
            "03619127-459f-40ca-80f3-c425723a1d50",
            "bae5b408-eb14-45d5-badf-d10d2c5ef722",
            "0c0a12f0-1ebb-4a49-beab-2117846ec52c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12163,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}